# Unidades de medida

"""
En primer lugar, hemos identificado que en muchos escenarios de la vida real los valores que manejamos no est√°n expresados en las mismas unidades de medida. En este caso, el programa va a obtener los par√°metros en las siguientes unidades:


- La posici√≥n inicial x0 en metros (m
).
- La velocidad inicial v0 en kil√≥metros por hora (km/h
).
- La aceleraci√≥n a en metros sobre segundo al cuadrado (m/s2
).
- El tiempo t en segundos (s
).

Dado que la velocidad est√° dada en kilometros por hora, es necesario antes calcular algunas conversiones entre unidades de medida. Tenga en cuenta las siguientes equivalencias:

1 km = 1000 m <--> 1 m = 1/1000 km

1 h = 3600 s <--> 1 s = 1/3600 h

1 km / s = 1/3.6 m/s <--> 1 m/s = 3.6 km/s

------------------------------------------------------------------------------------------------------------------------------------

‚å®Ô∏è Entrada

¬øC√≥mo funciona la entrada en UNCode?
La entrada ser√° provista por UNCode en la forma de casos de prueba de texto. Esta entrada deber√° ser recibida en su programa con instrucciones que incluyan la funci√≥n input.

Su programa deber√° recibir de la entrada 4 l√≠neas con los valores de x0, v0, a y t respectivamente.


L√≠nea 1: cadena de texto con la posici√≥n inicial x0 en m
.
L√≠nea 2: cadena de texto con la velocidad inicial v0 en km/h
.
L√≠nea 3: cadena de texto con la aceleraci√≥n a en m/s2
.
L√≠nea 4: cadena de texto con el tiempo t en s
.

Tenga en cuenta que cada una de estas l√≠neas es obtenida como cadenas de texto con un formato que puede ser convertido a un valor decimal con la funci√≥n float. No olvide realizar la conversi√≥n del tipo de dato en su programa.

--------------------------------------------------------------------------------------------------------------------------------------

üñ•Ô∏è Salida

¬øC√≥mo funciona la salida en UNCode?
La salida ser√° capturada por UNCode y comparada con la salida esperada de cada caso de prueba. Esta salida deber√° ser generada por su programa con instrucciones que incluyan la funci√≥n print.


En este ejercicio el programa deber√° imprimir exactamente 1 l√≠nea con la respuesta del ejercicio. Esta respuesta deber√° tener este formato exacto:


'La posici√≥n final es de {x} m y la velocidad es de {v} km/h'


- {x} corresponde a la posici√≥n final calculada en metros (m
), que deber√° ser presentada con un formato que muestre exactamente 2 d√≠gitos decimales.
- {v} corresponde a la velocidad final calculada en kil√≥metros por hora (km/h
), que deber√° ser presentada con un formato que muestre exactamente 3 d√≠gitos decimales.

----------------------------------------------------------------------------------------------------------------------------------------

üß© Ejemplos
Entrada Ejemplo 1

15
3.2
0
0
Salida Ejemplo 1

La posici√≥n final es de 15.00 m y la velocidad es de 3.200 km/h

Entrada Ejemplo 2

21.1
40
0.1
60
Salida Ejemplo 2

La posici√≥n final es de 867.77 m y la velocidad es de 61.600 km/h

Entrada Ejemplo 3

47
6
5e-2
147
Salida Ejemplo 3

La posici√≥n final es de 832.23 m y la velocidad es de 32.460 km/h
"""

##################################################
#### üíª Tarea: Ejercicios de f√≠sica (II)  üíª ####
##################################################

""" ## üëá Escriba su c√≥digo DEBAJO de esta l√≠nea üëá ##


# 1) Obtener de la entrada del programa los par√°metros iniciales.
# 2) Convertir cada valor de texto obtenido de la entrada en un valor num√©rico decimal.

x0 = float(input("Ingrese la posici√≥n inicial x0 en m: "))
v0 = float(input("Ingrese la velocidad inicial v0 en km/h: "))
a = float(input("Ingrese la aceleraci√≥n a en m/s2: "))
t = float(input("Ingrese el tiempo t en s: "))

# 3) Realizar las operaciones matem√°ticas para las conversiones de unidad de medida necesarias.

v0_m_s = v0 * (1000 / 3600)
a_km_h = a * (3600 / 1000)

# 4) Utilizar los valores num√©ricos en las expresiones matem√°ticas de cada ecuaci√≥n y obtener el valor de:

#     i. Posici√≥n final 

x = x0 + v0_m_s * t + (1/2) * a * t ** 2

#     ii. Velocidad final.

v = v0 + a_km_h * t

# 5) Reportar el resultado de la operaci√≥n con el formato solicitado.

print(f"La posici√≥n final es de {x:.2f} m y la velocidad es de {v:.3f} km/h")

## ‚òùÔ∏è Escriba su c√≥digo ENCIMA de esta l√≠nea ‚òùÔ∏è ## """

# N√∫mero sucesor --------------------------------------------------------------------------------------------------------------

### ESCRIBA SU C√ìDIGO A PARTIR DE AQU√ç ### (~ 3 l√≠neas de c√≥digo)

# Entrada del programa (~ 1 l√≠nea).
# Para este tipo de ejercicios no incluir ning√∫n mensaje dentro de input, ya que cambia la respuesta que se env√≠a y el caso no es aceptado

""" numero_n = int(input())

# Operaci√≥n matem√°tica y asignaci√≥n (~ 1 l√≠nea).

numero_n_1 = numero_n + 1

# Salida del programa (~ 1 l√≠nea).

print(numero_n_1)

# Transformando cadenas de texto """

"""
Realizar un programa que reciba una cadena de texto, aplique una serie de transformaciones, siguiendo las reglas escritas a continuaci√≥n; y al final imprima el resultado obtenido.


- Todos los caracteres deben de estar completamente en min√∫scula.
- Las vocales 'a', 'e' y 'o' deben de ser reemplazadas por el car√°cter 'i'.
- De igual manera, se deber√°n reemplazar sus versiones con acento ('√Å', '√°', '√â', '√©', '√ì' y '√≥') por el car√°cter '√≠'.
"""

### ESCRIBA SU C√ìDIGO A PARTIR DE AQU√ç ### (~ 11 l√≠neas de c√≥digo)

""" # Entrada del programa (~ 1 l√≠nea).
cadena = input()
cadena = cadena.lower()

# Operaciones en cadenas de texto (~ 9 l√≠neas)
resultado = cadena.replace('a','i')
resultado = resultado.replace('e','i')
resultado = resultado.replace('o','i')
resultado = resultado.replace('√°','√≠')
resultado = resultado.replace('√©','√≠')
resultado = resultado.replace('√≥','√≠')

# Salida del programa (~ 1 l√≠nea).
print(resultado) """

""" üß© Ejemplos

Entrada 1
Bienvenido al curso de programaci√≥n con Python

Salida 1
biinvinidi il cursi di prigrimici√≠n cin pythin

Entrada 2
El √∫nico modo de hacer un gran trabajo es amar lo que haces

Salida 2
il √∫nici midi di hicir un grin tribiji is imir li qui hicis

Entrada 3
Si no sueltas el pasado, ¬øcon qu√© mano agarras el futuro?

Salida 3
si ni suiltis il pisidi, ¬øcin qu√≠ mini igirris il futuri? """

# ---------------------------------------------------------------------------------------------------------------------------------

""" üí° Problema: Divisi√≥n de las ganancias

Escriba un programa que solucione el siguiente problema algebraico.


Decide poner un puesto de venta de tamales en una feria local con 6
 de sus amigos. Preparar un tamal tiene un valor de 3$
, por lo que entre todos deciden vender los tamales a 5$
 para tener un margen de ganancias apropiado. De antemano acuerdan que las ganancias de las ventas ser√°n divididas entre los 7
 de manera equitativa y sin partes d ecimales, y el dinero que sobre ser√° guardado para ser usado en una celebraci√≥n despu√©s del evento.


Por ejemplo, si el dinero recolectado al final del evento, descontando el dinero invertido en cocinar los tamales vendidos (es decir, la ganancia neta) es de 25$
, se podr√≠a dar 3$
 a cada uno de los amigos y quedar√≠an 4$
 para la celebraci√≥n.


¬øCu√°nto dinero le corresponde a cada persona y cu√°nto dinero queda para la reuni√≥n?

‚å®Ô∏è Entrada

¬øC√≥mo funciona la entrada en UNCode?
La entrada ser√° provista por UNCode en la forma de casos de prueba de texto. Esta entrada deber√° ser recibida en su programa con instrucciones que incluyan la funci√≥n input.

El programa recibir√° un √∫nico valor de entrada.


- ventas: n√∫mero entero entre 0 y 300 que representa el n√∫mero total de tamales vendido.


üñ•Ô∏è Salida

¬øC√≥mo funciona la salida en UNCode?
La salida ser√° capturada por UNCode y comparada con la salida esperada de cada caso de prueba. Esta salida deber√° ser generada por su programa con instrucciones que incluyan la funci√≥n print.


El programa debe imprimir en la salida dos l√≠neas.

- monto_integrante: el monto de dinero que le corresponde a cada integrante del grupo.
- monto_sobrante: el monto de dinero sobrante y depositado para la celebraci√≥n despu√©s del evento. 

üß© Ejemplos

Entrada Ejemplo 1           Salida Ejemplo 1
93                          26
                            4

Entrada Ejemplo 2           Salida Ejemplo 2
21                          6
                            0

Entrada Ejemplo 3           Salida Ejemplo 3
2                           0
                            4
"""
### ESCRIBA SU C√ìDIGO A PARTIR DE AQU√ç ### (~ 6 l√≠neas de c√≥digo)

# Entrada del programa (~ 1 l√≠nea).
ventas = int(input())                       # Reemplace 'None' por el c√≥digo necesario. 

if ventas in range(0,301): 

    costo = 3 * ventas
    total = 5 * ventas
    ganancias = total - costo

    # Operaciones matem√°ticas (~ 3 l√≠neas).

    monto_integrante = ganancias // 7
    monto_sobrante = ganancias % 7

    # Salida del programa (~ 2 l√≠neas).
    print(monto_integrante)          # Indique el primer resultado en esta l√≠nea.
    print(monto_sobrante)            # Indique el segundo resultado en esta l√≠nea.